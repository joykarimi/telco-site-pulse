import{aa as n}from"./index-BGj3ccG0.js";import{D as f,B as o,N as c,O as m,J as S,I as u,P as g,Q as w,K as y,R as h}from"./firebase-DJ2aAbxa.js";async function A(t){const s=f(o(n,"assets"),m("serialNumber","==",t));return(await c(s)).empty}async function F(){return(await c(o(n,"assets"))).docs.map(s=>{var i,r;const e=s.data();return{id:s.id,...e,purchaseDate:(i=e.purchaseDate)==null?void 0:i.toDate(),installationDate:(r=e.installationDate)==null?void 0:r.toDate()}})}async function E(t){var i,r;const s=u(n,"assets",t),e=await w(s);if(e.exists()){const l=e.data();return{id:e.id,...l,purchaseDate:(i=l.purchaseDate)==null?void 0:i.toDate(),installationDate:(r=l.installationDate)==null?void 0:r.toDate()}}else return null}async function x(t){await y(o(n,"assets"),{...t,site:t.site||"Unassigned"})}async function R(t,s){const e=u(n,"assets",t);await h(e,s)}async function b(t){const s=u(n,"assets",t);await g(s)}async function U(){const t=o(n,"assets"),s=await c(t),e=S(n);s.forEach(i=>{e.delete(i.ref)}),await e.commit()}async function v(){return(await c(o(n,"asset_movements"))).docs.map(s=>({id:s.id,...s.data()}))}async function G(t){await y(o(n,"asset_movements"),{...t,status:"Pending"})}async function L(t,s){const e=u(n,"asset_movements",t);await h(e,s)}async function q(){const t=f(o(n,"siteDefinitions"));return(await c(t)).docs.map(e=>({id:e.id,...e.data()}))}async function J(t){return(await y(o(n,"siteDefinitions"),t)).id}async function N(t,s){const e=f(o(n,"siteMonthlyData"),m("month","==",t),m("year","==",s));return(await c(e)).docs.map(r=>({id:r.id,...r.data()}))}async function T(t){await y(o(n,"siteMonthlyData"),t)}async function B(t,s,e){const i=S(n),r=await q(),l=new Map(r.map(a=>[a.name.toLowerCase(),a.id]));for(const a of t){let d=l.get(a.Site.toLowerCase());if(!d){const p=u(o(n,"siteDefinitions"));i.set(p,{name:a.Site,type:a.Type}),d=p.id,l.set(a.Site.toLowerCase(),d)}const D=u(o(n,"siteMonthlyData"));i.set(D,{siteId:d,month:s,year:e,earningsSafaricom:parseFloat(a.Safaricom&&String(a.Safaricom).trim()!==""?a.Safaricom:"0"),earningsAirtel:parseFloat(a.Airtel&&String(a.Airtel).trim()!==""?a.Airtel:"0"),earningsJtl:parseFloat(a.JTL&&String(a.JTL).trim()!==""?a.JTL:"0"),gridConsumption:parseFloat(a["Grid Expense"]&&String(a["Grid Expense"]).trim()!==""?a["Grid Expense"]:"0"),gridUnitCost:parseFloat(a["Grid Unit Cost"]&&String(a["Grid Unit Cost"]).trim()!==""?a["Grid Unit Cost"]:"0"),fuelConsumption:parseFloat(a["Fuel Expense"]&&String(a["Fuel Expense"]).trim()!==""?a["Fuel Expense"]:"0"),fuelUnitCost:parseFloat(a["Fuel Unit Cost"]&&String(a["Fuel Unit Cost"]).trim()!==""?a["Fuel Unit Cost"]:"0"),solarMaintenanceCost:parseFloat(a["Solar Expense"]&&String(a["Solar Expense"]).trim()!==""?a["Solar Expense"]:"0"),solarContribution:String(a["Solar Contribution"]&&String(a["Solar Contribution"]).trim()!==""?a["Solar Contribution"]:"0")})}await i.commit()}async function I(t,s){const e=u(n,"siteMonthlyData",t);await h(e,s)}async function P(t){const s=S(n),e=u(n,"siteDefinitions",t),i=await w(e);if(!i.exists())throw new Error("Site not found");const r=i.data().name;s.delete(e);const l=f(o(n,"siteMonthlyData"),m("siteId","==",t));(await c(l)).forEach(p=>{s.delete(p.ref)});const d=f(o(n,"assets"),m("site","==",r));(await c(d)).forEach(p=>{s.delete(p.ref)}),await s.commit()}async function Q(t){const s=f(o(n,"userProfiles"),m("role","==",t));return(await c(s)).docs.map(i=>({uid:i.id,...i.data()}))}export{N as a,x as b,F as c,U as d,b as e,J as f,q as g,T as h,A as i,I as j,P as k,B as l,L as m,v as n,Q as o,E as p,G as r,R as u};
